[{"path":"https://phacochr.github.io/phacochr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joel Gires. Author, maintainer. Hugo Perilleux. Author.","code":""},{"path":"https://phacochr.github.io/phacochr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gires J, Perilleux H (2022). phacochr: Geocodeur belge. https://phacochr.github.io/phacochr/, https://github.com/phacochr.","code":"@Manual{,   title = {phacochr: Geocodeur belge},   author = {Joel Gires and Hugo Perilleux},   year = {2022},   note = {https://phacochr.github.io/phacochr/, https://github.com/phacochr}, }"},{"path":"https://phacochr.github.io/phacochr/index.html","id":"phacochr-","dir":"","previous_headings":"","what":"Geocodeur belge","title":"Geocodeur belge","text":"phacochr est un géocodeur pour la Belgique sous forme de package R. partir d’une liste d’adresses, il permet de retrouver les coordonnées X-Y nécessaires à toute analyse spatiale, à un niveau de précision du bâtiment. Le programme fonctionne avec les données publiques BeST Address compilées par BOSA à partir des données régionales Urbis (Région de Bruxelles-Capitale), CRAB (Région flamande) et ICAR (Région wallonne). La logique de phacochr est de réaliser une jointure inexacte entre la liste à géocoder et les données BeST Address grâce aux fonctions des packages R fuzzyjoin et stringdist. phacochr dispose de plusieurs options : il peut notamment réaliser des corrections orthographiques (en français et néérlandais) préalables à la détection des rues ou procéder au géocodage au numéro le plus proche - de préférence du même côté de la rue - si les coordonnées du numéro indiqué sont inconnues (par exemple si l’adresse n’existe plus). En cas de non disponibilité du numéro de la rue, le programme indique les coordonnées du numéro médian de la rue. phacochr est compatible avec les 3 langues nationales : il géocode des adresses écrites en français, néérlandais ou allemand. Le package est très rapide pour géocoder de longues listes (+/- 1min40 pour géocoder 20.000 adresses dans les 3 langues et situées dans toute la Belgique) et le taux de succès pour le géocodage est élevé (en moyenne 95%). phacochr constitue donc une alternative très performante face aux solutions existantes tout en reposant entièrement sur des données publiques et des procédures libres.","code":""},{"path":"https://phacochr.github.io/phacochr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Geocodeur belge","text":"Vous pouvez installer le package phacochr depuis GitHub. Il est indispensable lors de la première utilisation d’installer les données nécessaires à son utilisation via la fonction phaco_setup_data(). Ces fichiers (+/- 265Mo) sont téléchargés et stockés de manière permanente dans un répertoire de travail sur l’ordinateur (dépendant du système d’exploitation et renseigné par la fonction lors de l’installation). Il est également possible pour l’utilisateur de mettre à jour lui-même les données BeST Address (actualisées de manière hebdomadaire par BOSA) vers les dernières données disponibles en ligne avec la fonction phaco_best_data_update() :","code":"# Installer devtools si celui-ci n'est pas présent sur votre ordinateur install.packages(\"devtools\") library(devtools)  # Installer et charger phacochr devtools::install_github(\"phacochr/phacochr\") library(phacochr)  # Installer les données nécessaires à phacochr phaco_setup_data() phaco_best_data_update()"},{"path":"https://phacochr.github.io/phacochr/index.html","id":"exemple-de-géocodage","dir":"","previous_headings":"","what":"Exemple de géocodage","title":"Geocodeur belge","text":"Voici un exemple de géocodage d’un data.frame contenant deux adresses : Le géocodage se lance simplement avec la fonction phaco_geocode() appliquée à ce data.frame. Nous indiquons dans cet exemple 3 paramètres : les colonnes contenant la rue, le numéro de rue et le code postal, disponibles séparément dans la base de données. Il s’agit de la situation idéale, mais le programme est compatible avec d’autres configurations : celles-ci sont renseignée plus bas au point Configurations de géocodage possibles. Mentionnons déjà que le numéro peut ne pas être renseigné ; phacochr trouve alors les coordonnées du numéro médian de la rue au code postal indiqué. La fonction dispose de plusieurs options, voir le manuel : https://phacochr.github.io/phacochr/. Le package dispose également d’une fonction de cartographie des adresses géocodées. phaco_map_s() produit des cartes statiques à partir des données géocodées : il suffit de passer à la fonction l’objet data_geocoded_sf créé précédemment par phaco_geocode(). La fonction dessine alors les coordonnées des adresses sur une carte dont les frontières administratives sont également affichées. Si les adresses se restreignent à Bruxelles, la carte se limite automatiquement à la Région bruxelloise. Les options de la fonction sont également renseignées dans le manuel.","code":"x <- data.frame(nom = c(\"Observatoire de la Santé et du Social\", \"ULB\"),                 rue = c(\"rue Belliard\", \"avenue Antoine Depage\"),                 num = c(\"71\", \"30\"),                 code_postal = c(\"1040\", \"1000\")) x #>                                     nom                   rue num code_postal #> 1 Observatoire de la Santé et du Social          rue Belliard  71        1040 #> 2                                   ULB avenue Antoine Depage  30        1000 result <- phaco_geocode(data_to_geocode = x,                         colonne_rue= \"rue\",                         colonne_num= \"num\",                         colonne_code_postal=\"code_postal\") result$data_geocoded [,c(\"ID_address\", \"x_31370\", \"y_31370\", \"cd_sector\")] #>   ID_address x_31370 y_31370 cd_sector #> 1          1  150373  170090 21004B13- #> 2          2  151105  166831 21004C61- phaco_map_s(result$data_geocoded_sf,             title_carto = \"Institutions des auteurs\")"},{"path":"https://phacochr.github.io/phacochr/index.html","id":"configurations-de-géocodage-possibles","dir":"","previous_headings":"","what":"Configurations de géocodage possibles","title":"Geocodeur belge","text":"Cinq configurations de géocodage sont possibles dans phacochr : Le numéro de rue, la rue et le code postal sont présents dans des colonnes séparées dans les données à géocoder : il s’agit de la configuration idéale qui rencontrera le meilleur résultat. Dans ce cas, il faut renseigner les arguments colonne_num, colonne_rue et colonne_code_postal. Le numéro de rue et la rue sont mélangés dans une colonne, et le code postal seul dans une autre : dans ce cas, phacochr recrée à l’aide des expressions régulières (REGEX) la rue et le numéro dans des colonnes séparées. Cette procédure fonctionne très bien la plupart du temps. Il faut cependant respecter une règle importante : le numéro de rue doit être le premier numéro indiqué dans le champ. Un numéro de boite (ou autre numéro) ne peut par exemple pas précéder le numéro de rue (cas cependant peu courant). Cette configuration demande de renseigner les arguments colonne_num_rue et colonne_code_postal. Le numéro de rue, la rue et le code postal sont intégrés dans la même colonne : phacochr recrée le numéro de rue, la rue (comme la situation précédente) mais aussi le code postal dans des colonnes séparées. Cette situation fonctionne également très bien, à condition d’observer cette règle : le numéro doit être le premier nombre et le code postal être en fin de champ (situations les plus courantes). Dans ce cas, il faut renseigner l’argument colonne_num_rue_code_postal. La rue et le code postal sont présents dans des colonnes séparées (sans numéro) : cette situation ressemble à la première, mais sans que le numéro soit disponible. phacochr géocode alors non pas à un niveau de précision du bâtiment, mais choisi comme coordonnée de résultat le batiment disposant du numéro médian de la rue au sein du même code postal (certaines rues traversant différents codes postaux). Cette configuration demande de renseigner les arguments colonne_rue et colonne_code_postal. La rue et le code postal sont intégrés dans la même colonne (sans numéro) : le programme recrée la rue et le code postal dans des colonnes séparées (comme la situation 3). Dans ce cas, le code postal doit être en fin de champ. Lorsque ce n’est pas le cas, le programme ne fonctionne pas (situation peu courante). Cette configuration demande de renseigner l’argument colonne_rue_code_postal. Dans chacune de ces configurations, le programme procède à différentes corrections pour obtenir les informations nécessaires au géocodage. Le tableau ci-dessous schématise les différentes configurations, indique différents exemples à partir d’une même adresse et des notes pour que l’utilisateur comprenne ce que fait le programme : Tableau schématique des configurations possibles","code":""},{"path":"https://phacochr.github.io/phacochr/index.html","id":"logique-de-phacochr","dir":"","previous_headings":"","what":"Logique de phacochr","title":"Geocodeur belge","text":"Nous expliquons ici avec plus de détail la logique du traitement réalisé par phacochr. Celui-ci repose sur les données BeST Address, que nous avons largement reformatées pour optimiser le traitement. Nous avons également utilisé des données produites par Statbel et Urbis dans ce reformatage. Nous ne rentrons pas dans l’explication de ces modifications ici, et renvoyons les curieux au code de la fonction phaco_best_data_update() disponible sur Github. Nous nous concentrons ici sur les opérations réalisées par la fonction phaco_geocode(), fonction de géocodage à proprement parler. Si l’schématise, ces opérations se classent en trois grandes familles : Formatage des données : le programme détecte d’abord la configuration des données à géocoder, et créé les colonnes nettoyées de numéro de rue (si disponible, ce qui est souvent le cas), de rue et de code postal. Des corrections sont faites pour chacun de ces champs, afin de maximiser les chances de trouver l’adresse dans la suite des opérations. Détection des rues : phacochr procède alors à une jointure inexacte entre chacune des rue (nettoyées au point précédent) et l’ensemble des rue de BeST Address au sein du code postal indiqué. La procédure est réalisée en calcul parallélisé avec n-1 cores afin d’augmenter sa vitesse. Le paramètre error_max permet d’indiquer l’erreur acceptable par l’utilisateur. Celle-ci est réglée par défaut à 4, ce qui permet de trouver des rues mal orthographiées, sans les confondre avec d’autres, avec un très bon taux de succès. Augmenter ce paramètre augmentera le pourcentage de rues trouvées, mais aussi d’erreurs réalisées. Dans le cas où la langue dans laquelle les adresses sont inscrites est connue, elle peut être renseignée via l’argument lang_encoded, ce qui augmente la vitesse et la fiabilité du processus. Si la rue n’est pas trouvée, le programme étend sa recherche à la commune entière et à toutes les communes limitrophes. Cette procédure optionnelle peut être désactivée avec le paramètre elargissement_com_adj = FALSE. Jointure avec les coordonnées géographiques : une fois la rue trouvée, il est désormais possible de réaliser une jointure exacte avec les données BeST au niveau du numéro, celles-ci comprenant les coordonnées X-Y de l’ensemble des adresses en Belgique. Pour ce faire, seuls les arrondissements dans lesquels sont présents les codes postaux sont chargés en RAM, pour augmenter la vitesse et soulager l’ordinateur. Les coordonnées des adresses qui ne sont pas trouvées sont approximées en trouvant les coordonnées connues de l’adresse la plus proche du même côté de la rue. L’amplitude maximale de cette approximation est réglabe avec le paramètre approx_num_max (à régler à 0 pour la désactiver). Dans le cas où les coordonnées ne sont pas trouvées, ce sont celles du numéro médian de la rue (proxy du milieu de la rue) qui sont indiquées (désactivable avec l’argument mid_street = FALSE). Si les données ne possèdent pas de numéro, c’est cette information qui est indiquée comme résultat du géocodage. La procédure de géocodage est alors finie. Nous terminons les opérations en joignant à chaque adresse trouvée différentes informations administratives utiles. Sans être exhaustifs, y trouve : Les secteurs statistiques (et leurs noms en NL et FR) ; Les codes INS des communes, arrondissements, provinces et regions (ainsi que leurs noms en FR et NL) ; Les quartier monitoring pour Bruxelles. Nous créons également un objet sf - exportable en geopackage ou qui peut être cartographié avec la fonction phaco_map_s - et produisons quelques statistiques indiquant la performance du géocodage. Le tableau ci-dessous schématise l’ensemble des opérations réalisées : Tableau schématique du traitement opéré par phacochr","code":""},{"path":"https://phacochr.github.io/phacochr/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Geocodeur belge","text":"En cas de bug, n’hésitez surtout pas à nous contacter : nous désirons améliorer le programme et sommes preneur de tout retour. Les deux auteurs de ce package sont chercheurs en sociologie et en géographie ; nous ne sommes pas programmeurs de profession, et sommes également preneurs de toute proposition d’amélioration !","code":""},{"path":[]},{"path":[]},{"path":"https://phacochr.github.io/phacochr/reference/phaco_best_data_update.html","id":null,"dir":"Reference","previous_headings":"","what":"phaco_best_data_update : Mise à jour des données BeST et des fichier connexes — phaco_best_data_update","title":"phaco_best_data_update : Mise à jour des données BeST et des fichier connexes — phaco_best_data_update","text":"Cette fonction met à jour les données BeST Address vers la dernière version disponible sur le site de BOSA : https://opendata.bosa.ainsi que les fichiers connexes nécessaire au géocodage.","code":""},{"path":"https://phacochr.github.io/phacochr/reference/phaco_best_data_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phaco_best_data_update : Mise à jour des données BeST et des fichier connexes — phaco_best_data_update","text":"","code":"phaco_best_data_update(force = FALSE)"},{"path":"https://phacochr.github.io/phacochr/reference/phaco_best_data_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"phaco_best_data_update : Mise à jour des données BeST et des fichier connexes — phaco_best_data_update","text":"force Force la mise à jour même si les données sont à jour. Par défaut: FALSE","code":""},{"path":"https://phacochr.github.io/phacochr/reference/phaco_best_data_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"phaco_best_data_update : Mise à jour des données BeST et des fichier connexes — phaco_best_data_update","text":"","code":"phaco_best_data_update()"},{"path":"https://phacochr.github.io/phacochr/reference/phaco_geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"phaco_geocode : Géocodeur pour la Belgique — phaco_geocode","title":"phaco_geocode : Géocodeur pour la Belgique — phaco_geocode","text":"Cette fonction est la principale du package phacochr. partir d’une liste d’adresses, elle permet de retrouver leurs coordonnees X-Y.","code":""},{"path":"https://phacochr.github.io/phacochr/reference/phaco_geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phaco_geocode : Géocodeur pour la Belgique — phaco_geocode","text":"","code":"phaco_geocode(   data_to_geocode,   colonne_rue = NULL,   colonne_num = NULL,   colonne_code_postal = NULL,   colonne_num_rue = NULL,   colonne_num_rue_code_postal = NULL,   colonne_rue_code_postal = NULL,   method_stringdist = \"lcs\",   corrections_REGEX = TRUE,   error_max = 4,   approx_num_max = 50,   elargissement_com_adj = TRUE,   mid_street = TRUE,   lang_encoded = c(\"FR\", \"NL\", \"DE\"),   path_data = NULL )"},{"path":"https://phacochr.github.io/phacochr/reference/phaco_geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"phaco_geocode : Géocodeur pour la Belgique — phaco_geocode","text":"data_to_geocode Un dataframe avec les adresses geocoder colonne_rue Nom de la colonne avec les rues colonne_num Nom de la colonne avec les numéros colonne_code_postal Nom de la colonne avec les codes postaux colonne_num_rue Nom de la colonne avec numéros et rues ensembles colonne_num_rue_code_postal Nom de la colonne avec numéros, rues et code postaux ensembles colonne_rue_code_postal Nom de la colonne avec rues et code postaux ensembles method_stringdist Méthode pour la jointure inexacte. Par défaut: \"lcs\". Choix possibles: \"osa\", \"lv\", \"dl\", \"hamming\", \"lcs\", \"qgram\", \"cosine\", \"jaccard\", \"jw\",\"soundex\". corrections_REGEX Correction orthographique. Par défaut: TRUE. Cette option n'est désactivable que si la rue est contenue dans une colonne séparée, et ne contient ni le numéro ni le code postal. error_max Nombre maximal d'erreurs entre le nom de la rue trouver et le nom de la rue dans la base de donnée de référence (BeST). Par défaut: TRUE approx_num_max Nombre de numéros d'écart maximum si le numéro n'pas été trouve. Par défaut: 50 elargissement_com_adj Élargissement aux communes limitrophes. Par défaut: TRUE mid_street Indique les coordonnées du milieu de la rue si les coordonnées du numéro ne sont pas trouvée. Par défaut: TRUE lang_encoded Langue utilisée pour encoder les noms de rue. Par défaut: c(\"FR\", \"NL\", \"DE\") path_data Chemin absolu vers le dossier où se trouve le données. Par défaut data_path = NULL et phacochr trouve le dossier correspondant.","code":""},{"path":"https://phacochr.github.io/phacochr/reference/phaco_geocode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"phaco_geocode : Géocodeur pour la Belgique — phaco_geocode","text":"","code":"x <- data.frame(nom = c(paste0(\"Observatoire de la Sant\",\"\\u00e9\",\" et du Social\"), \"ULB\"), rue = c(\"rue Belliard\",\"avenue Antoine Depage\"), num = c(\"71\", \"30\"), code_postal = c(\"1040\",\"1000\"))  result <- phaco_geocode(data_to_geocode = x, colonne_rue = \"rue\", colonne_num = \"num\", colonne_code_postal = \"code_postal\")"},{"path":"https://phacochr.github.io/phacochr/reference/phaco_map_s.html","id":null,"dir":"Reference","previous_headings":"","what":"phaco_map_s : Carte statique des résultats — phaco_map_s","title":"phaco_map_s : Carte statique des résultats — phaco_map_s","text":"Cette fonction produit facilement une carte statique partir de l'objet issu du geocodage.","code":""},{"path":"https://phacochr.github.io/phacochr/reference/phaco_map_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phaco_map_s : Carte statique des résultats — phaco_map_s","text":"","code":"phaco_map_s(   FULL_GEOCODING_sf,   colonne_ponderation = NULL,   title_carto = paste0(\"adresses geocodees\"),   filter_bxl = FALSE,   zoom_geocoded = FALSE,   nom_admin = TRUE )"},{"path":"https://phacochr.github.io/phacochr/reference/phaco_map_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"phaco_map_s : Carte statique des résultats — phaco_map_s","text":"FULL_GEOCODING_sf Un objet sf cartographier colonne_ponderation Un poids pour les points cartographier title_carto Le titre de la carte produite filter_bxl Afficher uniquement Bruxelles zoom_geocoded Zoomer sur les points nom_admin Afficher les noms des entites administratives","code":""},{"path":"https://phacochr.github.io/phacochr/reference/phaco_setup_data.html","id":null,"dir":"Reference","previous_headings":"","what":"phaco_setup_data : Téléchargement et installation des données pour géocoder — phaco_setup_data","title":"phaco_setup_data : Téléchargement et installation des données pour géocoder — phaco_setup_data","text":"Cette fonction permet d'installer sur l'ordinateur les fichiers nécessaires pour le geocodage des adresses.","code":""},{"path":"https://phacochr.github.io/phacochr/reference/phaco_setup_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phaco_setup_data : Téléchargement et installation des données pour géocoder — phaco_setup_data","text":"","code":"phaco_setup_data()"},{"path":"https://phacochr.github.io/phacochr/reference/phaco_setup_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"phaco_setup_data : Téléchargement et installation des données pour géocoder — phaco_setup_data","text":"","code":"phaco_setup_data()"}]
